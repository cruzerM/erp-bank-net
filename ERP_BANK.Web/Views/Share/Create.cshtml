@model ERP_BANK.Domain.Entities.share

@{
    ViewBag.Title = "Create";


    List<SelectListItem> listS = new List<SelectListItem>
    { new SelectListItem {Text="Dinar Tunisien", Value="1" , Selected =true},
    new SelectListItem {Text="EURO", Value="2" },
    };

   
}
<link type="text/css" href="http://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css" rel="stylesheet" />
<script src="http://code.jquery.com/ui/1.10.3/jquery-ui.js"></script>

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<link rel="stylesheet" href="/resources/demos/style.css">
  

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal" style="padding-top:5%;padding-left:5%">
            
            <h3 style="color:#1A82C3; font-family:Arial">Add a new share</h3>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <br />
            <br/>
            <div style="padding-left:10%">
                <div class="form-group">
                    @Html.LabelFor(model => model.currency1, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" style="width:25%">
                        @Html.EditorFor(model => model.currency1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.currency1, "", new { @class = "text-danger" })


                    </div>

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.currency2, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" style="width:25%">
                        @Html.EditorFor(model => model.currency2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.currency2, "", new { @class = "text-danger" })

                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.amountInvested, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" style="width:25%">

                        @Html.EditorFor(model => model.amountInvested, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.amountInvested, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.dateOfPurchase, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" style="width:25%">
                        @Html.EditorFor(model => model.dateOfPurchase, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.dateOfPurchase, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.dateOfSale, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" style="width:25%">
                        @Html.EditorFor(model => model.dateOfSale, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.dateOfSale, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.gain, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" style="width:25%">
                        @Html.EditorFor(model => model.gain, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.gain, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.idBroker, "idBroker", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" style="width:25%">
                        @Html.DropDownList("idBroker", null, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.idBroker, "", new { @class = "text-danger" })

                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" style="width:25%">
                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                    </div>
                </div>


            </div>

            <div class="form-group" style="color:darkorange; padding-left:50%" >
                <div class="col-md-offset-2 col-md-10"  >
                    <input style="font-size:large "type="submit" value="Save and inform client" class="btn btn-sm btn-primary" /> <i class="fa fa-reply"style="font-size:x-large"></i>
                </div>
            </div>
        </div>
    }
    <script type="text/javascript">
        $(function () {
            $('#dateOfPurchase').datepicker();
        }); </script>
    <script type="text/javascript">
        $(function () {
            $('#dateOfSale').datepicker();
        }); </script>



    <div style="font-size:large">
        <a href="@Url.Action("Index", "Share")" class="btn btn-danger btn-xs">
            <i class="fa fa-arrow-circle-left"></i>
            Back to List
        </a>
    </div>


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
